name: Build with Nuitka and Upload to Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Existing Tag (e.g., v1.0)'
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build   setuptools setuptools-scm -U
          
          pip install -r requirements.txt
          pip install imageio
          python -m setuptools_scm  --force-write-version-files


      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: NepTrainKit/main.py
          include-package: NepTrainKit
          output-file: NepTrainKit.exe
          mode: standalone
          windows-console-mode: disable
          include-qt-plugins: sqldrivers
          include-package-data: vispy
          upx-binary: ${{ github.workspace }}/src/NepTrainKit/upx${{ runner.os == 'Windows' && '.exe' || '' }}
          enable-plugins: pyside6,upx
          windows-icon-from-ico: NepTrainKit/src/images/logo.png
          working-directory: ${{ github.workspace }}/src/

      - name: Copy additional files
        shell: pwsh
        run: |
          Copy-Item -Recurse -Path ${{ github.workspace }}/src/NepTrainKit/Config -Destination ${{ github.workspace }}/src/build/main.dist/Config -Force
          Copy-Item ${{ github.workspace }}/src/NepTrainKit/update.exe ${{ github.workspace }}/src/build/main.dist/update.exe
          Copy-Item ${{ github.workspace }}/src/NepTrainKit/nep_cpu.pyd ${{ github.workspace }}/src/build/main.dist/nep_cpu.pyd
          Copy-Item ${{ github.workspace }}/src/NepTrainKit/libomp140.x86_64.dll ${{ github.workspace }}/src/build/main.dist/libomp140.x86_64.dll
          Remove-Item -Path "${{ github.workspace }}/src/build/main.dist/NepTrainKit" -Recurse -Force
          New-Item -ItemType Directory -Force ${{ github.workspace }}/src/build/main.dist/Log
          New-Item -ItemType File -Path ${{ github.workspace }}/src/build/main.dist/Log/.placeholder -Force
      - name: Package artifacts (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Set-Location ${{ github.workspace }}/src/build/main.dist/
          $compress = @{
            Path = "*"
            CompressionLevel = "Fastest"
            DestinationPath = "${{ github.workspace }}/NepTrainKit-${{ inputs.tag_name }}-windows.zip"
          }
          Compress-Archive @compress
          Write-Host "Package created at ${{ github.workspace }}/NepTrainKit-${{ inputs.tag_name }}-windows.zip"
      # 新增：重命名文件
      - name: Rename Release Asset
        shell: pwsh
        run: |
          $originalFile = "${{ github.workspace }}/NepTrainKit-${{ inputs.tag_name }}-windows.zip"
          $newFile = "${{ github.workspace }}/NepTrainKit.win32.zip"  # 修改为你想要的名称
          Move-Item -Path $originalFile -Destination $newFile -Force
          Write-Host "Renamed file to $newFile"

      - name: Verify File Exists
        shell: pwsh
        run: |
          $filePath = "${{ github.workspace }}/NepTrainKit.win32.zip"
          if (-not (Test-Path -Path $filePath)) {
            Write-Error "File not found: $filePath"
            exit 1
          }
          Write-Host "File exists: $filePath"
# 获取现有 Release 的 body
      - name: Get Existing Release Body
        id: get_release
        uses: actions/github-script@v6
        env:
          TAG_NAME: ${{ inputs.tag_name }}
        with:
          script: |
            try {
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: process.env.TAG_NAME
              });
              core.setOutput('body', release.body || 'No release notes available.');
              core.setOutput('id', release.id);
              console.log(`Fetched release body for tag ${process.env.TAG_NAME}`);
            } catch (error) {
              core.setFailed(`Error: No release found for tag ${process.env.TAG_NAME}. Please create it first.`);
            }
      # 使用现有 body 创建/更新 Release
      - name: Upload Release
        if steps.get_release.outputs.id:
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag_name }}
          name: ${{ inputs.tag_name }}
          body: ${{ steps.get_release.outputs.body }}  # 使用获取到的现有 body
          files: ${{ github.workspace }}/NepTrainKit.win32.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: NepTrainKit-${{ matrix.os }}-${{ inputs.tag_name }}
          path: ${{ github.workspace }}/src/build/main.dist/