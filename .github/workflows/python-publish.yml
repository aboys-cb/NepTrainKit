# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version:  ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build   pybind11 setuptools setuptools-scm -U
          if [[ "${{ runner.os }}" == "Linux" ]]; then pip install auditwheel; fi
          if [[ "${{ runner.os }}" == "Windows" ]]; then pip install delvewheel; fi
          if [[ "${{ runner.os }}" == "macOS" ]]; then pip install delocate; fi
 
    - name: clear
      run: |
        rm -rf build/ dist/ *.egg-info
        

    - name: Build package
      run: |
        python setup.py bdist_wheel
          if [[ "${{ runner.os }}" == "Linux" ]]; then auditwheel repair dist/*.whl -w dist/; fi
          if [[ "${{ runner.os }}" == "Windows" ]]; then delvewheel repair dist/*.whl -w dist/; fi
          if [[ "${{ runner.os }}" == "macOS" ]]; then delocate-wheel dist/*.whl -w dist/; fi
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: dist/*.whl
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
